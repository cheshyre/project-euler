// Problem 2

// Each new term in the Fibonacci sequence is generated by adding the previous two
// terms. By starting with 1 and 2, the first 10 terms will be:

//     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed
// four million, find the sum of the even-valued terms.

fn main() {
    const FIB_MAX: u32 = 4_000_000;

    let mut a: u32 = 1;
    let mut b: u32 = 2;

    let mut count: u32 = 0;
    let mut sum: u32 = 0;

    while b <= FIB_MAX {
        if count == 0 {
            sum += b;
        }

        let x = calc_fib(a, b);
        a = x.0;
        b = x.1;

        count = (count + 1) % 3;
    }

    println!("The sum is {}", sum);
}

fn calc_fib(a: u32, b: u32) -> (u32, u32) {
    (b, a + b)
}
